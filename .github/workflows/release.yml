name: Release
on:
  release:
    types: [created]
permissions:
  contents: write
  packages: write
jobs:
  update-go-pkg:
    runs-on: ubuntu-latest
    steps:
      - name: Update pkg.go.dev
        run: |
          curl https://proxy.golang.org/github.com/${{ github.repository }}/@v/${GITHUB_REF##*/}.info
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin, freebsd]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 2.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set GOAMD64 for amd64
        if: matrix.goarch == 'amd64'
        run: echo "GOAMD64=v3" >> $GITHUB_ENV

      - name: Set GOARM for arm
        if: matrix.goarch == 'arm64'
        run: echo "GOARM=7" >> $GITHUB_ENV

      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          build_command: task build
